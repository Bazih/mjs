// Определить порядок выполнения операторов с помощью таблицы приоритетов операций.

// 1.
  var x = 6, y = 15, z = 4; 
  y /= x + 5 % z;

// В первой строке присваиваются поочередно x, y, z, будут равны 6, 15, 4.
// Во второй строке операнд "y" будет иметь значение 2.142857142857143, так как порядок выполнения следующий:
//   1. остаток от деления (5 % 4), равно 1;
//   2. сложение (6 + 1), равно 7;
//   3. присваивание с делением (15 / 7), равно 2.142857142857143,
//      значение 15 перезаписано результатом вычислений;
// Итог: x === 6, y === 2.142857142857143, z === 4;
console.log(x === 6, y === 2.142857142857143, z === 4);

// 2.
  var x = 6, y = 15, z = 4; 
  z = x++ + y * 5;

// В первой строке присваиваются поочередно x, y, z, будут равны 6, 15, 4.
// Во второй строке операнд "z" будет иметь значение 81, так как порядок выполнения следующий:
//   1. инкрементное постфиксное увеличение (x++) операнда "x", то есть x = 7,
//      но значение вернется до увеличения;
//   2. умножение (15 * 5), равно 75;
//   3. сложение (6 + 75), равно 81;
//   4. присвоение, значение переменной "z" равное 4, перезаписано результатом вычислений;
// Итог: x === 7, y === 15, z === 81;
console.log(x === 7, y === 15, z === 81);

// 3.
  var x = 6, y = 15, z = 4; 
  x += y - x++ * z;

// В первой строке присваиваются поочередно x, y, z, будут равны 6, 15, 4.
// Во второй строке операнд "x" будет равен -3, так как порядок выполнения следующий:
//   1. инкрементное постфиксное увеличение (x++) операнда "x", то есть x = 7,
//      но значение вернется до увеличения;
//   2. умножение (6 * 4), равно 24;
//   3. вычитание (15 - 24), равно -9;
//   4. сложение с присвоением (6 + -9), равно -3 (значение в "x" равное 7 перезаписано);
// Итог: x === -3, y === 15, z === 4;
console.log(x === -3, y === 15, z === 4);

// 4.
  var x = 6, y = 15, z = 4; 
  z = -- x - y * 5;

// В первой строке присваиваются поочередно x, y, z, будут равны 6, 15, 4.
// Во второй строке операнд "z" будет равен -70, так как порядок выполнения следующий:
//   1. инкрементное префиксное уменьшение (-- x) операнда "x", то есть x = 5,
//      так как префиксное уменьшение, значение будет возвращено сразу после операции;
//   2. умножение (15 * 5), равно 75;
//   3. вычитание (5 - 75), равно -70;
//   4. присвоение, значение "z" равное 4, перезаписано результатом вычислений;
// Итог: x === 5, y === 15, z === -70;
console.log(x === 5, y === 15, z === -70);

// 5.
  var a = 3;  
  var b = ++a + 1 + a++;

// В первой строке переменной "a" присваивается значение 3;
// Во второй строке переменная "b" будет равна , так как порядок операций следующий:
//   1. инкрементное постфиксное увеличение (a++) операнда "a", то есть "a" увеличилась до 4,
//      но вернется после операции значение 3;
//   2. инкрементное префиксное увеличение (++a) операнда "a",
//      так как в прошлой операции значение было увеличено на единицу, то в этой операции значение будет 5
//      и вернется именно 5 после операции;
//   3. сложение левее операнда единицы (5 + 1);
//   4. сложение правее операнда единицы (6 + 3);
//   5. присваивание операнду "b" результата вычислений 9;
// Итог: a === 5, b === 9;
console.log(a === 5, b === 9);
